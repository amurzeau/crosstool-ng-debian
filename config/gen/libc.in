#
# DO NOT EDIT! This file is automatically generated.
#

choice GEN_CHOICE_LIBC
    bool "C library"

config LIBC_AVR_LIBC
    bool "avr-libc"
    depends on ARCH_AVR
    depends on BARE_METAL
    select LIBC_SUPPORT_THREADS_NONE
    select OMIT_TARGET_VENDOR
    select TARGET_SKIP_CONFIG_SUB
    help
      The AVR Libc package provides a subset of the standard C library for
      Atmel AVR 8-bit RISC microcontrollers. In addition, the library
      provides the basic startup code needed by most applications.
    
config LIBC_BIONIC
    bool "bionic"
    depends on ! WINDOWS && ! BARE_METAL
    depends on ARCH_ARM || ARCH_MIPS || ARCH_X86
    depends on EXPERIMENTAL
    depends on OBSOLETE
    select GCC_REQUIRE_6_or_later
    select GCC_REQUIRE_older_than_11
    select GDB_REQUIRE_7_12_or_later
    select GDB_REQUIRE_older_than_10
    select LIBC_SUPPORT_THREADS_POSIX
    help
      Bionic is the Android C library. It is prebuilt, extracted from the Android NDK.
      This platform has no TLS (Thread Local Storage) support so that option must be
      disabled in the Compiler options.
    
config LIBC_GLIBC
    bool "glibc"
    depends on ! WINDOWS && ! BARE_METAL && ARCH_USE_MMU
    select LIBC_SUPPORT_THREADS_NATIVE
    select CC_CORE_NEEDED
    select GETTEXT_NEEDED
    select BINUTILS_FORCE_LD_BFD_DEFAULT
    help
      The de-facto standard for Linux distributions.
      Feature-rich, but large...  Most useful for desktop-like systems.
    
config LIBC_MINGW_W64
    bool "mingw-w64"
    depends on WINDOWS
    select LIBC_SUPPORT_THREADS_NATIVE
    select LIBC_SUPPORT_THREADS_POSIX
    select CC_CORE_NEEDED
    select BINUTILS_FORCE_LD_BFD_DEFAULT
    help
      The de-facto standard for Mingw distributions.
    
config LIBC_MOXIEBOX
    bool "moxiebox"
    depends on ARCH_MOXIE
    depends on ARCH_LE
    depends on BARE_METAL
    select LIBC_NEWLIB_SHOW
    select LIBC_SUPPORT_THREADS_NONE
    select COMP_TOOLS_AUTOCONF if !CONFIGURE_has_autoconf_2_65_or_newer || !CONFIGURE_has_autoreconf_2_64_or_newer
    select COMP_TOOLS_AUTOMAKE if !CONFIGURE_has_automake_1_15_or_newer
    select CC_CORE_NEEDED
    select LIBELF_NEEDED
    help
      Secure execution runtime for Moxie architecture.
    
config LIBC_MUSL
    bool "musl"
    depends on ! WINDOWS && ! BARE_METAL
    depends on EXPERIMENTAL
    select LIBC_SUPPORT_THREADS_NATIVE
    select CC_CORE_NEEDED
    help
      Musl is a new standard library to power a new generation of Linux-based
      devices. musl is lightweight, fast, simple, free, and strives to be
      correct in the sense of standards-conformance and safety.
    
config LIBC_NEWLIB
    bool "newlib"
    depends on BARE_METAL
    select LIBC_PROVIDES_CXA_ATEXIT
    select LIBC_SUPPORT_THREADS_NONE
    select CC_CORE_NEEDED
    help
      Newlib is a C library intended for use on embedded systems. It is a
      conglomeration of several library parts, all under free software
      licenses that make them easily usable on embedded products. Newlib
      is only available in source form. It can be compiled for a wide
      array of processors, and will usually work on any architecture with
      the addition of a few low-level routines.
    
config LIBC_NONE
    bool "none"
    depends on BARE_METAL
    help
      Do not use a C library.
      This is useful if your project is self-contained, does not rely on
      an external C library, and provides all the necessary bits.
      Most probably useful to bootloaders, as they generally don't depend
      on the C library.
      If unsure: do *not* choose that, and use another option in the choice.
    
config LIBC_UCLIBC_NG
    bool "uClibc-ng"
    depends on ! WINDOWS && ! BARE_METAL
    select LIBC_SUPPORT_THREADS_LT
    select LIBC_SUPPORT_THREADS_NONE
    select LIBC_SUPPORT_THREADS_NATIVE
    select CC_CORE_NEEDED
    help
      The de-facto standard for embeded linux systems.
      Highly configurable, thus as feature-rich as you
      need, without compromising for size.
    
endchoice

config LIBC
    string
    default "avr-libc" if LIBC_AVR_LIBC
    default "bionic" if LIBC_BIONIC
    default "glibc" if LIBC_GLIBC
    default "mingw-w64" if LIBC_MINGW_W64
    default "moxiebox" if LIBC_MOXIEBOX
    default "musl" if LIBC_MUSL
    default "newlib" if LIBC_NEWLIB
    default "none" if LIBC_NONE
    default "uClibc-ng" if LIBC_UCLIBC_NG

config LIBC_CHOICE_KSYM
    string
    default "AVR_LIBC" if LIBC_AVR_LIBC
    default "BIONIC" if LIBC_BIONIC
    default "GLIBC" if LIBC_GLIBC
    default "MINGW_W64" if LIBC_MINGW_W64
    default "MOXIEBOX" if LIBC_MOXIEBOX
    default "MUSL" if LIBC_MUSL
    default "NEWLIB" if LIBC_NEWLIB
    default "NONE" if LIBC_NONE
    default "UCLIBC_NG" if LIBC_UCLIBC_NG

config LIBC_AVR_LIBC_SHOW
    bool
    default y if LIBC_AVR_LIBC

if LIBC_AVR_LIBC_SHOW
comment "Options for avr-libc"
config LIBC_AVR_LIBC_PKG_KSYM
    string
    default "AVR_LIBC"

source "config/versions/avr-libc.in"
source "config/libc/avr-libc.in"
endif

config LIBC_BIONIC_SHOW
    bool
    default y if LIBC_BIONIC

if LIBC_BIONIC_SHOW
comment "Options for bionic"
config LIBC_BIONIC_PKG_KSYM
    string
    default "ANDROID_NDK"

source "config/versions/android-ndk.in"
source "config/libc/bionic.in"
endif

config LIBC_GLIBC_SHOW
    bool
    default y if LIBC_GLIBC

if LIBC_GLIBC_SHOW
comment "Options for glibc"
config LIBC_GLIBC_PKG_KSYM
    string
    default "GLIBC"

source "config/versions/glibc.in"
source "config/libc/glibc.in"
endif

config LIBC_MINGW_W64_SHOW
    bool
    default y if LIBC_MINGW_W64

if LIBC_MINGW_W64_SHOW
comment "Options for mingw-w64"
config LIBC_MINGW_W64_PKG_KSYM
    string
    default "MINGW_W64"

source "config/versions/mingw-w64.in"
source "config/libc/mingw-w64.in"
endif

config LIBC_MOXIEBOX_SHOW
    bool
    default y if LIBC_MOXIEBOX

if LIBC_MOXIEBOX_SHOW
comment "Options for moxiebox"
config LIBC_MOXIEBOX_PKG_KSYM
    string
    default "MOXIEBOX"

source "config/versions/moxiebox.in"
source "config/libc/moxiebox.in"
endif

config LIBC_MUSL_SHOW
    bool
    default y if LIBC_MUSL

if LIBC_MUSL_SHOW
comment "Options for musl"
config LIBC_MUSL_PKG_KSYM
    string
    default "MUSL"

source "config/versions/musl.in"
source "config/libc/musl.in"
endif

config LIBC_NEWLIB_SHOW
    bool
    default y if LIBC_NEWLIB

if LIBC_NEWLIB_SHOW
comment "Options for newlib"
config LIBC_NEWLIB_PKG_KSYM
    string
    default "NEWLIB"

source "config/versions/newlib.in"
source "config/libc/newlib.in"
endif

config LIBC_NONE_SHOW
    bool
    default y if LIBC_NONE

if LIBC_NONE_SHOW
comment "Options for none"
config LIBC_NONE_PKG_KSYM
    string
    default ""

source "config/libc/none.in"
endif

config LIBC_UCLIBC_NG_SHOW
    bool
    default y if LIBC_UCLIBC_NG

if LIBC_UCLIBC_NG_SHOW
comment "Options for uClibc-ng"
config LIBC_UCLIBC_NG_PKG_KSYM
    string
    default "UCLIBC_NG"

source "config/versions/uClibc-ng.in"
source "config/libc/uClibc-ng.in"
endif


config ALL_LIBC_CHOICES
    string
    default "AVR_LIBC BIONIC GLIBC MINGW_W64 MOXIEBOX MUSL NEWLIB NONE UCLIBC_NG"
